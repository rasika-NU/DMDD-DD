
-- Top 3 most subscribed Instructors

CREATE OR REPLACE VIEW MostSubscribedInstructorView AS
SELECT
    I.INSTRUCTOR_ID,
    I.FIRST_NAME || ' ' || I.LAST_NAME AS INSTRUCTOR_NAME,
    COUNT(S.SUBSCRIPTION_ID) AS SUBSCRIBER_COUNT
FROM
    INSTRUCTOR I
JOIN
    SUBSCRIPTION S ON I.INSTRUCTOR_ID = S.INSTRUCTOR_ID
GROUP BY
    I.INSTRUCTOR_ID, I.FIRST_NAME, I.LAST_NAME
ORDER BY
    SUBSCRIBER_COUNT DESC
FETCH FIRST 3 ROWS ONLY;



SELECT * FROM MostSubscribedInstructorView;



-- 3 least subscribed instructors

CREATE OR REPLACE VIEW LeastSubscribedInstructorView AS
SELECT
    I.INSTRUCTOR_ID,
    I.FIRST_NAME || ' ' || I.LAST_NAME AS INSTRUCTOR_NAME,
    COUNT(S.SUBSCRIPTION_ID) AS SUBSCRIBER_COUNT
FROM
    INSTRUCTOR I
LEFT JOIN
    SUBSCRIPTION S ON I.INSTRUCTOR_ID = S.INSTRUCTOR_ID
GROUP BY
    I.INSTRUCTOR_ID, I.FIRST_NAME, I.LAST_NAME
ORDER BY
    SUBSCRIBER_COUNT
FETCH FIRST 3 ROWS ONLY;

SELECT * FROM LeastSubscribedInstructorView;



-- top 3 most boooked activities 

CREATE OR REPLACE VIEW MostBookedActivitiesView AS
SELECT
    ACTIVITY_ID,
    ACTIVITY_NAME,
    SCHEDULED_DATE,
    BOOKING_COUNT
FROM
    (
        SELECT
            A.ACTIVITY_ID,
            A.ACTIVITY_NAME,
            A.SCHEDULED_DATE,
            COUNT(B.BOOKING_ID) AS BOOKING_COUNT
        FROM
            ACTIVITY A
        LEFT JOIN
            BOOKING B ON A.ACTIVITY_ID = B.ACTIVITY_ID
        GROUP BY
            A.ACTIVITY_ID, A.ACTIVITY_NAME, A.SCHEDULED_DATE
        ORDER BY
            BOOKING_COUNT DESC
    )
FETCH FIRST 3 ROWS ONLY;


SELECT * FROM MostBookedActivitiesView;

-- top 3 most active students:
CREATE OR REPLACE VIEW MostActiveStudentsView AS
SELECT
    S.NEU_ID,
    S.FIRSTNAME || ' ' || S.LASTNAME AS STUDENT_NAME,
    COUNT(B.BOOKING_ID) AS BOOKING_COUNT
FROM
    STUDENT S
JOIN
    BOOKING B ON S.NEU_ID = B.NEU_ID
GROUP BY
    S.NEU_ID, S.FIRSTNAME, S.LASTNAME
ORDER BY
    BOOKING_COUNT DESC
FETCH FIRST 3 ROWS ONLY;


SELECT * FROM MostActiveStudentsView;

-- 3 leat inactive students

CREATE OR REPLACE VIEW LeastActiveStudentsView AS
SELECT
    S.NEU_ID,
    S.FIRSTNAME || ' ' || S.LASTNAME AS STUDENT_NAME,
    COUNT(B.BOOKING_ID) AS BOOKING_COUNT
FROM
    STUDENT S
LEFT JOIN
    BOOKING B ON S.NEU_ID = B.NEU_ID
GROUP BY
    S.NEU_ID, S.FIRSTNAME, S.LASTNAME
ORDER BY
    BOOKING_COUNT
FETCH FIRST 3 ROWS ONLY;


SELECT * FROM LeastActiveStudentsView;
